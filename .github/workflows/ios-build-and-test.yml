name: Build and Test (iOS)

on:
  workflow_call:
    inputs:
      ios-device-names:
        description: |
          The iOS device names to use for testing. Must be formatted as a valid JSON array string.
          Example: '["iPhone 15", "iPhone 15 Pro"]'
            - Notice the use of single quotes to wrap the JSON array string, and double quotes for each array element.
        type: string
        default: '["iPhone 15"]'
      ios-versions:
        description: |
          The iOS versions to use for testing. Must be formatted as a valid JSON array string.
          Example: '["18.0", "18.1"]'
            - Notice the use of single quotes to wrap the JSON array string, and double quotes for each array element.
        type: string
        default: '["18.0"]'
      tvos-device-names:
        description: |
          The tvOS device names to use for testing. Must be formatted as a valid JSON array string.
          Example: '["Apple TV 4K (3rd generation)", "Apple TV"]'
            - Notice the use of single quotes to wrap the JSON array string, and double quotes for each array element.
        type: string
        default: '["Apple TV"]'
      tvos-versions:
        description: |
          The tvOS versions to use for testing. Must be formatted as a valid JSON array string.
          Example: '["18.0", "18.1"]'
            - Notice the use of single quotes to wrap the JSON array string, and double quotes for each array element.
        type: string
        default: '["18.0"]'
      # Flags for which tests to run
      run-test-ios-unit:
        type: boolean
        default: false
      run-test-ios-functional:
        type: boolean
        default: false
      run-test-ios-integration:
        type: boolean
        default: false
      run-test-tvos-unit:
        type: boolean
        default: false
      run-test-tvos-functional:
        type: boolean
        default: false
      run-test-tvos-integration:
        type: boolean
        default: false
      run-build-xcframework-and-app:
        type: boolean
        default: false
      enable-codecov:
        description: 'Enable Codecov for test coverage.'
        type: boolean
        default: true

jobs:
  validate-code:
    name: Validate Code
    uses: adobe/aepsdk-commons/.github/workflows/ios-validate-code.yml@gha-ios-2.2.2
  
  test-ios-unit:
    name: Unit Test (iOS)
    needs: validate-code
    if: inputs.run-test-ios-unit
    uses: adobe/aepsdk-commons/.github/workflows/ios-custom-command-build-and-test.yml@gha-ios-2.2.2
    with:
      ios-device-names: ${{ inputs.ios-device-names }}
      ios-versions: ${{ inputs.ios-versions }}
      command: make unit-test-ios
      enable-codecov: ${{ inputs.enable-codecov }}
      codecov-flag: ios-unit-tests
    secrets: inherit

  test-ios-functional:
    name: Functional Test (iOS)
    needs: validate-code
    if: inputs.run-test-ios-functional
    uses: adobe/aepsdk-commons/.github/workflows/ios-custom-command-build-and-test.yml@gha-ios-2.2.2
    with:
      ios-device-names: ${{ inputs.ios-device-names }}
      ios-versions: ${{ inputs.ios-versions }}
      command: make functional-test-ios
      enable-codecov: ${{ inputs.enable-codecov }}
      codecov-flag: ios-functional-tests
    secrets: inherit

  test-ios-integration:
    name: Integration Test (iOS)
    needs: validate-code
    if: inputs.run-test-ios-integration
    uses: adobe/aepsdk-commons/.github/workflows/ios-custom-command-build-and-test.yml@gha-ios-2.2.2
    with:
      ios-device-names: ${{ inputs.ios-device-names }}
      ios-versions: ${{ inputs.ios-versions }}
      command: make test-integration-upstream
      enable-codecov: ${{ inputs.enable-codecov }}
      codecov-flag: ios-integration-tests
    secrets: inherit

  test-tvos-unit:
    name: Unit Test (tvOS)
    needs: validate-code
    if: inputs.run-test-tvos-unit
    uses: adobe/aepsdk-commons/.github/workflows/ios-custom-command-build-and-test.yml@gha-ios-2.2.2
    with:
      tvos-device-names: ${{ inputs.tvos-device-names }}
      tvos-versions: ${{ inputs.tvos-versions }}
      command: make unit-test-tvos
      enable-codecov: ${{ inputs.enable-codecov }}
      codecov-flag: tvos-unit-tests
    secrets: inherit

  test-tvos-functional:
    name: Functional Test (tvOS)
    needs: validate-code
    if: inputs.run-test-tvos-functional
    uses: adobe/aepsdk-commons/.github/workflows/ios-custom-command-build-and-test.yml@gha-ios-2.2.2
    with:
      tvos-device-names: ${{ inputs.tvos-device-names }}
      tvos-versions: ${{ inputs.tvos-versions }}
      command: make functional-test-tvos
      enable-codecov: ${{ inputs.enable-codecov }}
      codecov-flag: tvos-functional-tests
    secrets: inherit
  
  test-tvos-integration:
    name: Integration Test (tvOS)
    needs: validate-code
    if: inputs.run-test-tvos-integration
    uses: adobe/aepsdk-commons/.github/workflows/ios-custom-command-build-and-test.yml@gha-ios-2.2.2
    with:
      tvos-device-names: ${{ inputs.tvos-device-names }}
      tvos-versions: ${{ inputs.tvos-versions }}
      command: make integration-test-tvos
      enable-codecov: ${{ inputs.enable-codecov }}
      codecov-flag: tvos-integration-tests
    secrets: inherit

  build_xcframework_and_app:
    name: Build XCFramework and Test App
    runs-on: macos-latest
    needs: validate-code
    if: inputs.run-build-xcframework-and-app

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.2.2
      
      - name: Setup Dependencies
        uses: adobe/aepsdk-commons/.github/actions/ios-setup-dependencies-action@gha-ios-2.2.2

      - name: Build XCFramework
        run: make archive

      - name: Build Test App
        run: make build-app
